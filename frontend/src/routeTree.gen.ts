/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ConfImport } from './routes/conf'
import { Route as IndexImport } from './routes/index'
import { Route as QueueIndexImport } from './routes/queue/index'
import { Route as QueueFailedImport } from './routes/queue/failed'

// Create/Update Routes

const ConfRoute = ConfImport.update({
  path: '/conf',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const QueueIndexRoute = QueueIndexImport.update({
  path: '/queue/',
  getParentRoute: () => rootRoute,
} as any)

const QueueFailedRoute = QueueFailedImport.update({
  path: '/queue/failed',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/conf': {
      id: '/conf'
      path: '/conf'
      fullPath: '/conf'
      preLoaderRoute: typeof ConfImport
      parentRoute: typeof rootRoute
    }
    '/queue/failed': {
      id: '/queue/failed'
      path: '/queue/failed'
      fullPath: '/queue/failed'
      preLoaderRoute: typeof QueueFailedImport
      parentRoute: typeof rootRoute
    }
    '/queue/': {
      id: '/queue/'
      path: '/queue'
      fullPath: '/queue'
      preLoaderRoute: typeof QueueIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ConfRoute,
  QueueFailedRoute,
  QueueIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/conf",
        "/queue/failed",
        "/queue/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/conf": {
      "filePath": "conf.tsx"
    },
    "/queue/failed": {
      "filePath": "queue/failed.tsx"
    },
    "/queue/": {
      "filePath": "queue/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
